name: release

on:
  workflow_run:
    workflows: [ test ]
    branches: [ master ]
    types: [ completed ]

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest

    outputs:
      published: ${{ steps.release.outputs.published }}
      release-version: ${{ steps.release.outputs.release-version }}
      release-version-major: ${{ steps.release.outputs.release-version-major }}
      release-version-minor: ${{ steps.release.outputs.release-version-minor }}

    steps:
      - uses: actions/checkout@v2
      - id: release
        uses: ahmadnassri/action-semantic-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  alias:
    needs: release

    if: needs.release.outputs.published == 'true'

    runs-on: ubuntu-latest
    strategy:
      matrix:
        alias:
          - version: v${{ needs.release.outputs.release-version-major }}
          - version: v${{ needs.release.outputs.release-version-major }}.${{ needs.release.outputs.release-version-minor }}

    steps:
      - uses: actions/github-script@v3
        with:
          script: |
            const tag = 'tags/${{ matrix.alias.version }}'
            const repo = {
              owner: context.repo.owner,
              repo: context.repo.repo
            }

            await github.git.deleteRef({ ...repo, ref: tag }).catch(() => {})
            await github.git.createRef({ ...repo, ref: `refs/${tag}` , sha: process.env.GITHUB_SHA })

  publish:
    needs: release

    if: needs.release.outputs.published == 'true'

    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker:
          - name: docker hub
            registry: registry.hub.docker.com
            password: DOCKER_TOKEN
            image: ${{ github.event.repository.full_name }}

          - name: github package registry
            password: GITHUB_TOKEN
            registry: docker.pkg.github.com
            image: ${{ github.event.repository.full_name }}/${{ github.event.repository.name }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: buildx-

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          registry: ${{ matrix.docker.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets[matrix.docker.password] }}

      - name: ${{ matrix.docker.name }}
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ matrix.docker.image }}:latest, ${{ matrix.docker.image }}:v${{ needs.release.outputs.release-version-major }}, ${{ matrix.docker.image }}:${{ needs.release.outputs.release-version }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ needs.release.outputs.release-version }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
